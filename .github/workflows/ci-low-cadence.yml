concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.ref }}
env:
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.java.installations.auto-detect=false
    -Dorg.gradle.warning.mode=fail
  INSTALL_COMPILER_RETRIES: '5'
jobs:
  cpp-sanitize-clang:
    env:
      CC: clang-${{ matrix.version }}
      CXX: clang++-${{ matrix.version }}
    name: C++ Sanitise Build Clang ${{ matrix.version }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.sha }}
    - continue-on-error: true
      name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle') }}
        path: ~/.gradle/caches
        restore-keys: '${{ runner.os }}-gradle-caches-

          '
    - continue-on-error: true
      name: Cache Gradle wrappers
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties')
          }}
        path: ~/.gradle/wrapper
    - continue-on-error: true
      name: Setup java 8 to run the Gradle script
      uses: actions/setup-java@v4
      with:
        distribution: zulu
        java-version: 8
    - continue-on-error: true
      name: Setup BUILD_JAVA_HOME & BUILD_JAVA_VERSION
      run: 'java -Xinternalversion

        echo "BUILD_JAVA_HOME=${JAVA_HOME}" >> $GITHUB_ENV

        echo "BUILD_JAVA_VERSION=8" >> $GITHUB_ENV

        '
    - continue-on-error: true
      name: Install compiler
      run: 'echo ''Acquire::Retries "${INSTALL_COMPILER_RETRIES}";'' | sudo tee -a
        /etc/apt/apt.conf.d/99retries

        sudo mkdir -p /etc/apt/keyrings/

        curl --retry ${INSTALL_COMPILER_RETRIES} https://apt.llvm.org/llvm-snapshot.gpg.key
        | sudo gpg --dearmor -o /etc/apt/keyrings/llvm-snapshot.gpg

        echo "deb [signed-by=/etc/apt/keyrings/llvm-snapshot.gpg] http://apt.llvm.org/jammy/
        llvm-toolchain-jammy-${{ matrix.version }} main" | sudo tee /etc/apt/sources.list.d/llvm.list

        sudo apt-get update

        sudo apt-get install -y clang-${{ matrix.version }} libbsd-dev uuid-dev

        '
    - continue-on-error: true
      name: Build
      run: cppbuild/cppbuild --relwithdebinfo-build --sanitise-build --c-warnings-as-errors
        --cxx-warnings-as-errors --slow-system-tests
    - continue-on-error: true
      id: copy_test_logs
      if: failure()
      name: Copy test logs
      run: 'echo "file=build/distributions/test_logs.tbz2" >> $GITHUB_OUTPUT

        ./gradlew tarTestLogs

        '
    - continue-on-error: true
      if: always() && steps.copy_test_logs.outputs.file == 'build/distributions/test_logs.tbz2'
      name: Upload crash logs
      uses: actions/upload-artifact@v4
      with:
        name: crash-logs-cpp-sanitize-clang-${{ matrix.version }}
        path: ${{ steps.copy_test_logs.outputs.file }}
    strategy:
      fail-fast: false
      matrix:
        version:
        - '18'
  cpp-sanitize-gcc:
    env:
      CC: gcc-${{ matrix.version }}
      CXX: g++-${{ matrix.version }}
    name: C++ Sanitise Build GCC ${{ matrix.version }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.sha }}
    - continue-on-error: true
      name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle') }}
        path: ~/.gradle/caches
        restore-keys: '${{ runner.os }}-gradle-caches-

          '
    - continue-on-error: true
      name: Cache Gradle wrappers
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties')
          }}
        path: ~/.gradle/wrapper
    - continue-on-error: true
      name: Setup java 8 to run the Gradle script
      uses: actions/setup-java@v4
      with:
        distribution: zulu
        java-version: 8
    - continue-on-error: true
      name: Setup BUILD_JAVA_HOME & BUILD_JAVA_VERSION
      run: 'java -Xinternalversion

        echo "BUILD_JAVA_HOME=${JAVA_HOME}" >> $GITHUB_ENV

        echo "BUILD_JAVA_VERSION=8" >> $GITHUB_ENV

        '
    - continue-on-error: true
      name: Install compiler
      run: 'echo ''Acquire::Retries "${INSTALL_COMPILER_RETRIES}";'' | sudo tee -a
        /etc/apt/apt.conf.d/99retries

        sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test

        sudo apt-get update

        sudo apt-get install -y g++-${{ matrix.version }} libbsd-dev uuid-dev

        '
    - continue-on-error: true
      name: Build
      run: cmake --version; make --version; ldd --version; g++-${{ matrix.version
        }} --version; cppbuild/cppbuild --relwithdebinfo-build --sanitise-build --c-warnings-as-errors
        --cxx-warnings-as-errors --slow-system-tests
    - continue-on-error: true
      id: copy_test_logs
      if: failure()
      name: Copy test logs
      run: 'echo "file=build/distributions/test_logs.tbz2" >> $GITHUB_OUTPUT

        ./gradlew tarTestLogs

        '
    - continue-on-error: true
      if: always() && steps.copy_test_logs.outputs.file == 'build/distributions/test_logs.tbz2'
      name: Upload crash logs
      uses: actions/upload-artifact@v4
      with:
        name: crash-logs-cpp-sanitize-gcc-${{ matrix.version }}
        path: ${{ steps.copy_test_logs.outputs.file }}
    strategy:
      fail-fast: false
      matrix:
        version:
        - '13'
  cpp-slow-tests-clang:
    env:
      CC: clang-${{ matrix.version }}
      CXX: clang++-${{ matrix.version }}
    name: C++ Slow System Tests Clang ${{ matrix.version }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.sha }}
    - continue-on-error: true
      name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle') }}
        path: ~/.gradle/caches
        restore-keys: '${{ runner.os }}-gradle-caches-

          '
    - continue-on-error: true
      name: Cache Gradle wrappers
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties')
          }}
        path: ~/.gradle/wrapper
    - continue-on-error: true
      name: Setup java 8 to run the Gradle script
      uses: actions/setup-java@v4
      with:
        distribution: zulu
        java-version: 8
    - continue-on-error: true
      name: Setup BUILD_JAVA_HOME & BUILD_JAVA_VERSION
      run: 'java -Xinternalversion

        echo "BUILD_JAVA_HOME=${JAVA_HOME}" >> $GITHUB_ENV

        echo "BUILD_JAVA_VERSION=8" >> $GITHUB_ENV

        '
    - continue-on-error: true
      name: Install compiler
      run: 'echo ''Acquire::Retries "${INSTALL_COMPILER_RETRIES}";'' | sudo tee -a
        /etc/apt/apt.conf.d/99retries

        sudo mkdir -p /etc/apt/keyrings/

        curl --retry ${INSTALL_COMPILER_RETRIES} https://apt.llvm.org/llvm-snapshot.gpg.key
        | sudo gpg --dearmor -o /etc/apt/keyrings/llvm-snapshot.gpg

        echo "deb [signed-by=/etc/apt/keyrings/llvm-snapshot.gpg] http://apt.llvm.org/jammy/
        llvm-toolchain-jammy-${{ matrix.version }} main" | sudo tee /etc/apt/sources.list.d/llvm.list

        sudo apt-get update

        sudo apt-get install -y clang-${{ matrix.version }} libbsd-dev uuid-dev

        '
    - continue-on-error: true
      name: Build
      run: cppbuild/cppbuild --c-warnings-as-errors --cxx-warnings-as-errors --slow-system-tests
        --no-system-tests --no-unit-tests
    - continue-on-error: true
      id: copy_test_logs
      if: failure()
      name: Copy test logs
      run: 'echo "file=build/distributions/test_logs.tbz2" >> $GITHUB_OUTPUT

        ./gradlew tarTestLogs

        '
    - continue-on-error: true
      if: always() && steps.copy_test_logs.outputs.file == 'build/distributions/test_logs.tbz2'
      name: Upload crash logs
      uses: actions/upload-artifact@v4
      with:
        name: crash-logs-cpp-slow-tests-clang-${{ matrix.version }}
        path: ${{ steps.copy_test_logs.outputs.file }}
    strategy:
      fail-fast: false
      matrix:
        version:
        - '18'
  cpp-slow-tests-gcc:
    env:
      CC: gcc-${{ matrix.version }}
      CXX: g++-${{ matrix.version }}
    name: C++ Slow System Tests GCC ${{ matrix.version }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.sha }}
    - continue-on-error: true
      name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle') }}
        path: ~/.gradle/caches
        restore-keys: '${{ runner.os }}-gradle-caches-

          '
    - continue-on-error: true
      name: Cache Gradle wrappers
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties')
          }}
        path: ~/.gradle/wrapper
    - continue-on-error: true
      name: Setup java 8 to run the Gradle script
      uses: actions/setup-java@v4
      with:
        distribution: zulu
        java-version: 8
    - continue-on-error: true
      name: Setup BUILD_JAVA_HOME & BUILD_JAVA_VERSION
      run: 'java -Xinternalversion

        echo "BUILD_JAVA_HOME=${JAVA_HOME}" >> $GITHUB_ENV

        echo "BUILD_JAVA_VERSION=8" >> $GITHUB_ENV

        '
    - continue-on-error: true
      name: Install compiler
      run: 'echo ''Acquire::Retries "${INSTALL_COMPILER_RETRIES}";'' | sudo tee -a
        /etc/apt/apt.conf.d/99retries

        sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test

        sudo apt-get update

        sudo apt-get install -y g++-${{ matrix.version }} libbsd-dev uuid-dev

        '
    - continue-on-error: true
      name: Build
      run: cppbuild/cppbuild --c-warnings-as-errors --cxx-warnings-as-errors --slow-system-tests
        --no-system-tests --no-unit-tests
    - continue-on-error: true
      id: copy_test_logs
      if: failure()
      name: Copy test logs
      run: 'echo "file=build/distributions/test_logs.tbz2" >> $GITHUB_OUTPUT

        ./gradlew tarTestLogs

        '
    - continue-on-error: true
      if: always() && steps.copy_test_logs.outputs.file == 'build/distributions/test_logs.tbz2'
      name: Upload crash logs
      uses: actions/upload-artifact@v4
      with:
        name: crash-logs-cpp-slow-tests-gcc-${{ matrix.version }}
        path: ${{ steps.copy_test_logs.outputs.file }}
    strategy:
      fail-fast: false
      matrix:
        version:
        - '13'
  cpp-slow-tests-msvc:
    env:
      CC: cl
      CXX: cl
    name: C++ Slow System Tests MSVC
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.sha }}
    - continue-on-error: true
      name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle') }}
        path: ~/.gradle/caches
        restore-keys: '${{ runner.os }}-gradle-caches-

          '
    - continue-on-error: true
      name: Cache Gradle wrappers
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties')
          }}
        path: ~/.gradle/wrapper
    - continue-on-error: true
      name: Setup java 8 to run the Gradle script
      uses: actions/setup-java@v4
      with:
        distribution: zulu
        java-version: 8
    - continue-on-error: true
      name: Setup BUILD_JAVA_HOME & BUILD_JAVA_VERSION
      run: 'java -Xinternalversion

        echo "BUILD_JAVA_HOME=${JAVA_HOME}" >> $GITHUB_ENV

        echo "BUILD_JAVA_VERSION=8" >> $GITHUB_ENV

        '
    - continue-on-error: true
      name: Build
      run: cppbuild/cppbuild.ps1 --slow-system-tests --no-system-tests --no-unit-tests
    - continue-on-error: true
      id: copy_test_logs
      if: failure()
      name: Copy test logs
      run: 'echo "file=build/distributions/test_logs.tbz2" >> $GITHUB_OUTPUT

        ./gradlew tarTestLogs

        '
    - continue-on-error: true
      if: always() && steps.copy_test_logs.outputs.file == 'build/distributions/test_logs.tbz2'
      name: Upload crash logs
      uses: actions/upload-artifact@v4
      with:
        name: crash-logs-cpp-slow-tests-msvc-latest
        path: ${{ steps.copy_test_logs.outputs.file }}
  java-javadoc:
    name: JavaDoc (JDK ${{ matrix.java }}, ${{ matrix.os }})
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.sha }}
    - continue-on-error: true
      name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle') }}
        path: ~/.gradle/caches
        restore-keys: '${{ runner.os }}-gradle-caches-

          '
    - continue-on-error: true
      name: Cache Gradle wrappers
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties')
          }}
        path: ~/.gradle/wrapper
    - continue-on-error: true
      name: Setup java
      uses: actions/setup-java@v4
      with:
        distribution: zulu
        java-version: ${{ matrix.java }}
    - continue-on-error: true
      if: runner.os == 'Linux'
      name: Setup BUILD_JAVA_HOME & BUILD_JAVA_VERSION (Linux)
      run: 'java -Xinternalversion

        echo "BUILD_JAVA_HOME=${JAVA_HOME}" >> $GITHUB_ENV

        echo "BUILD_JAVA_VERSION=${{ matrix.java }}" >> $GITHUB_ENV

        '
    - continue-on-error: true
      name: Setup java 8 to run the Gradle script
      uses: actions/setup-java@v4
      with:
        distribution: zulu
        java-version: 8
    - continue-on-error: true
      env:
        BUILD_JAVA_VERSION: ${{ matrix.java }}
      name: Build and Run Javadoc
      run: ./gradlew javadoc
    strategy:
      fail-fast: false
      matrix:
        java:
        - '8'
        - '17'
        - '21'
        os:
        - ubuntu-22.04
  java-slow-tests:
    name: Java Slow Tests (JDK ${{ matrix.java }}, ${{ matrix.os }})
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.sha }}
    - continue-on-error: true
      name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle') }}
        path: ~/.gradle/caches
        restore-keys: '${{ runner.os }}-gradle-caches-

          '
    - continue-on-error: true
      name: Cache Gradle wrappers
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties')
          }}
        path: ~/.gradle/wrapper
    - continue-on-error: true
      name: Setup java
      uses: actions/setup-java@v4
      with:
        distribution: zulu
        java-version: ${{ matrix.java }}
    - continue-on-error: true
      if: runner.os == 'Linux' || runner.os == 'macOS'
      name: Setup BUILD_JAVA_HOME & BUILD_JAVA_VERSION (Linux/MacOS)
      run: 'java -Xinternalversion

        echo "BUILD_JAVA_HOME=${JAVA_HOME}" >> $GITHUB_ENV

        echo "BUILD_JAVA_VERSION=${{ matrix.java }}" >> $GITHUB_ENV

        '
    - continue-on-error: true
      if: runner.os == 'Windows'
      name: Setup BUILD_JAVA_HOME & BUILD_JAVA_VERSION (Windows)
      run: 'java -Xinternalversion

        echo "BUILD_JAVA_HOME=$env:JAVA_HOME" | Out-File $env:GITHUB_ENV -Encoding
        utf8 -Append

        echo "BUILD_JAVA_VERSION=${{ matrix.java }}" | Out-File $env:GITHUB_ENV -Encoding
        utf8 -Append

        '
    - continue-on-error: true
      if: runner.os == 'macOS'
      name: Setup localhost name (MacOS)
      run: 'sudo sed -i bak "s/localhost/localhost $(hostname)/" /etc/hosts

        dscacheutil -flushcache

        '
    - continue-on-error: true
      name: Setup java 8 to run the Gradle script
      uses: actions/setup-java@v4
      with:
        distribution: zulu
        java-version: 8
    - continue-on-error: true
      env:
        BUILD_JAVA_VERSION: ${{ matrix.java }}
      name: Build and Run Slow Tests with Gradle
      run: ./gradlew slowTest
    - continue-on-error: true
      id: copy_test_logs
      if: failure()
      name: Copy test logs
      run: 'echo "file=build/distributions/test_logs.tbz2" >> $GITHUB_OUTPUT

        ./gradlew tarTestLogs

        '
    - continue-on-error: true
      if: always() && steps.copy_test_logs.outputs.file == 'build/distributions/test_logs.tbz2'
      name: Upload crash logs
      uses: actions/upload-artifact@v4
      with:
        name: crash-logs-${{ matrix.os }}-java-${{ matrix.java }}
        path: ${{ steps.copy_test_logs.outputs.file }}
    strategy:
      fail-fast: false
      matrix:
        java:
        - '8'
        - '17'
        - '21'
        os:
        - ubuntu-22.04
        - windows-latest
        - macos-14
name: Continuous Integration (Low Cadence)
on:
  repository_dispatch:
    types: trigger-ga___ci-low-cadence.yml
permissions:
  contents: read
