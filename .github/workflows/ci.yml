concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.ref }}
env:
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.java.installations.auto-detect=false
    -Dorg.gradle.warning.mode=fail
  INSTALL_COMPILER_RETRIES: '5'
jobs:
  cpp-clang-debug-build:
    env:
      CC: clang-${{ matrix.version }}
      CXX: clang++-${{ matrix.version }}
    name: C++ Clang ${{ matrix.version }} debug build
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.sha }}
    - continue-on-error: true
      name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle') }}
        path: ~/.gradle/caches
        restore-keys: '${{ runner.os }}-gradle-caches-

          '
    - continue-on-error: true
      name: Cache Gradle wrappers
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties')
          }}
        path: ~/.gradle/wrapper
    - continue-on-error: true
      name: Setup java 8 to run the Gradle script
      uses: actions/setup-java@v4
      with:
        distribution: zulu
        java-version: 8
    - continue-on-error: true
      name: Setup BUILD_JAVA_HOME & BUILD_JAVA_VERSION
      run: 'java -Xinternalversion

        echo "BUILD_JAVA_HOME=${JAVA_HOME}" >> $GITHUB_ENV

        echo "BUILD_JAVA_VERSION=8" >> $GITHUB_ENV

        '
    - continue-on-error: true
      name: Install compiler
      run: 'echo ''Acquire::Retries "${INSTALL_COMPILER_RETRIES}";'' | sudo tee -a
        /etc/apt/apt.conf.d/99retries

        sudo mkdir -p /etc/apt/keyrings/

        curl --retry ${INSTALL_COMPILER_RETRIES} https://apt.llvm.org/llvm-snapshot.gpg.key
        | sudo gpg --dearmor -o /etc/apt/keyrings/llvm-snapshot.gpg

        echo "deb [signed-by=/etc/apt/keyrings/llvm-snapshot.gpg] http://apt.llvm.org/jammy/
        llvm-toolchain-jammy-${{ matrix.version }} main" | sudo tee /etc/apt/sources.list.d/llvm.list

        sudo apt-get update

        sudo apt-get install -y clang-${{ matrix.version }} libbsd-dev uuid-dev

        '
    - continue-on-error: true
      name: Build
      run: cppbuild/cppbuild --debug-build
    - continue-on-error: true
      id: copy_test_logs
      if: failure()
      name: Copy test logs
      run: 'echo "file=build/distributions/test_logs.tbz2" >> $GITHUB_OUTPUT

        ./gradlew tarTestLogs

        '
    - continue-on-error: true
      if: always() && steps.copy_test_logs.outputs.file == 'build/distributions/test_logs.tbz2'
      name: Upload crash logs
      uses: actions/upload-artifact@v4
      with:
        name: crash-logs-clang-debug-${{ matrix.version }}
        path: ${{ steps.copy_test_logs.outputs.file }}
    strategy:
      fail-fast: false
      matrix:
        version:
        - '18'
  cpp-clang-ubuntu-2004-build:
    env:
      CC: clang-${{ matrix.version }}
      CXX: clang++-${{ matrix.version }}
    name: C++ Clang ${{ matrix.version }} (Ubuntu 20.04)
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.sha }}
    - continue-on-error: true
      name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle') }}
        path: ~/.gradle/caches
        restore-keys: '${{ runner.os }}-gradle-caches-

          '
    - continue-on-error: true
      name: Cache Gradle wrappers
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties')
          }}
        path: ~/.gradle/wrapper
    - continue-on-error: true
      name: Setup java 8 to run the Gradle script
      uses: actions/setup-java@v4
      with:
        distribution: zulu
        java-version: 8
    - continue-on-error: true
      name: Setup BUILD_JAVA_HOME & BUILD_JAVA_VERSION
      run: 'java -Xinternalversion

        echo "BUILD_JAVA_HOME=${JAVA_HOME}" >> $GITHUB_ENV

        echo "BUILD_JAVA_VERSION=8" >> $GITHUB_ENV

        '
    - continue-on-error: true
      name: Install compiler
      run: 'echo ''Acquire::Retries "${INSTALL_COMPILER_RETRIES}";'' | sudo tee -a
        /etc/apt/apt.conf.d/99retries

        sudo mkdir -p /etc/apt/keyrings/

        curl --retry ${INSTALL_COMPILER_RETRIES} https://apt.llvm.org/llvm-snapshot.gpg.key
        | sudo gpg --dearmor -o /etc/apt/keyrings/llvm-snapshot.gpg

        echo "deb [signed-by=/etc/apt/keyrings/llvm-snapshot.gpg] http://apt.llvm.org/focal/
        llvm-toolchain-focal-${{ matrix.version }} main" | sudo tee /etc/apt/sources.list.d/llvm.list

        sudo apt-get update

        sudo apt-get install -y clang-${{ matrix.version }} libstdc++-7-dev libbsd-dev
        uuid-dev libidn11

        '
    - continue-on-error: true
      name: Build
      run: cppbuild/cppbuild --c-warnings-as-errors --cxx-warnings-as-errors
    - continue-on-error: true
      id: copy_test_logs
      if: failure()
      name: Copy test logs
      run: 'echo "file=build/distributions/test_logs.tbz2" >> $GITHUB_OUTPUT

        ./gradlew tarTestLogs

        '
    - continue-on-error: true
      if: always() && steps.copy_test_logs.outputs.file == 'build/distributions/test_logs.tbz2'
      name: Upload crash logs
      uses: actions/upload-artifact@v4
      with:
        name: crash-logs-clang-2004-${{ matrix.version }}
        path: ${{ steps.copy_test_logs.outputs.file }}
    strategy:
      fail-fast: false
      matrix:
        version:
        - '9'
        - '10'
        - '11'
        - '12'
  cpp-clang-ubuntu-2204-build:
    env:
      CC: clang-${{ matrix.version }}
      CXX: clang++-${{ matrix.version }}
    name: C++ Clang ${{ matrix.version }} (Ubuntu 22.04)
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.sha }}
    - continue-on-error: true
      name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle') }}
        path: ~/.gradle/caches
        restore-keys: '${{ runner.os }}-gradle-caches-

          '
    - continue-on-error: true
      name: Cache Gradle wrappers
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties')
          }}
        path: ~/.gradle/wrapper
    - continue-on-error: true
      name: Setup java 8 to run the Gradle script
      uses: actions/setup-java@v4
      with:
        distribution: zulu
        java-version: 8
    - continue-on-error: true
      name: Setup BUILD_JAVA_HOME & BUILD_JAVA_VERSION
      run: 'java -Xinternalversion

        echo "BUILD_JAVA_HOME=${JAVA_HOME}" >> $GITHUB_ENV

        echo "BUILD_JAVA_VERSION=8" >> $GITHUB_ENV

        '
    - continue-on-error: true
      name: Install compiler
      run: 'echo ''Acquire::Retries "${INSTALL_COMPILER_RETRIES}";'' | sudo tee -a
        /etc/apt/apt.conf.d/99retries

        sudo mkdir -p /etc/apt/keyrings/

        curl --retry ${INSTALL_COMPILER_RETRIES} https://apt.llvm.org/llvm-snapshot.gpg.key
        | sudo gpg --dearmor -o /etc/apt/keyrings/llvm-snapshot.gpg

        echo "deb [signed-by=/etc/apt/keyrings/llvm-snapshot.gpg] http://apt.llvm.org/jammy/
        llvm-toolchain-jammy-${{ matrix.version }} main" | sudo tee /etc/apt/sources.list.d/llvm.list

        sudo apt-get update

        sudo apt-get install -y clang-${{ matrix.version }} libbsd-dev uuid-dev

        '
    - continue-on-error: true
      name: Setup small temp file system
      run: 'sudo mkdir -p /mnt/tmp_aeron_dir

        sudo mount -t tmpfs -o size=20M,mode=777 tmpfs /mnt/tmp_aeron_dir

        '
    - continue-on-error: true
      name: Build
      run: cppbuild/cppbuild --c-warnings-as-errors --cxx-warnings-as-errors
    - continue-on-error: true
      if: always()
      name: Remove small temp file system
      run: 'sudo umount /mnt/tmp_aeron_dir

        sudo rm -rf /mnt/tmp_aeron_dir

        '
    - continue-on-error: true
      id: copy_test_logs
      if: failure()
      name: Copy test logs
      run: 'echo "file=build/distributions/test_logs.tbz2" >> $GITHUB_OUTPUT

        ./gradlew tarTestLogs

        '
    - continue-on-error: true
      if: always() && steps.copy_test_logs.outputs.file == 'build/distributions/test_logs.tbz2'
      name: Upload crash logs
      uses: actions/upload-artifact@v4
      with:
        name: crash-logs-clang-2204-${{ matrix.version }}
        path: ${{ steps.copy_test_logs.outputs.file }}
    strategy:
      fail-fast: false
      matrix:
        version:
        - '13'
        - '14'
        - '15'
        - '16'
        - '17'
        - '18'
  cpp-gcc-2004-build:
    env:
      CC: gcc-${{ matrix.version }}
      CXX: g++-${{ matrix.version }}
    name: C++ GCC ${{ matrix.version }} (Ubuntu 20.04)
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.sha }}
    - continue-on-error: true
      name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle') }}
        path: ~/.gradle/caches
        restore-keys: '${{ runner.os }}-gradle-caches-

          '
    - continue-on-error: true
      name: Cache Gradle wrappers
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties')
          }}
        path: ~/.gradle/wrapper
    - continue-on-error: true
      name: Setup java 8 to run the Gradle script
      uses: actions/setup-java@v4
      with:
        distribution: zulu
        java-version: 8
    - continue-on-error: true
      name: Setup BUILD_JAVA_HOME & BUILD_JAVA_VERSION
      run: 'java -Xinternalversion

        echo "BUILD_JAVA_HOME=${JAVA_HOME}" >> $GITHUB_ENV

        echo "BUILD_JAVA_VERSION=8" >> $GITHUB_ENV

        '
    - continue-on-error: true
      name: Install compiler
      run: 'echo ''Acquire::Retries "${INSTALL_COMPILER_RETRIES}";'' | sudo tee -a
        /etc/apt/apt.conf.d/99retries

        sudo add-apt-repository "deb http://archive.ubuntu.com/ubuntu/ bionic main
        universe"

        sudo apt-get update

        sudo apt-get install -y g++-${{ matrix.version }} libbsd-dev uuid-dev libidn11

        '
    - continue-on-error: true
      name: Build
      run: cppbuild/cppbuild --c-warnings-as-errors --cxx-warnings-as-errors
    - continue-on-error: true
      id: copy_test_logs
      if: failure()
      name: Copy test logs
      run: 'echo "file=build/distributions/test_logs.tbz2" >> $GITHUB_OUTPUT

        ./gradlew tarTestLogs

        '
    - continue-on-error: true
      if: always() && steps.copy_test_logs.outputs.file == 'build/distributions/test_logs.tbz2'
      name: Upload crash logs
      uses: actions/upload-artifact@v4
      with:
        name: crash-logs-gcc-2004-${{ matrix.version }}
        path: ${{ steps.copy_test_logs.outputs.file }}
    strategy:
      fail-fast: false
      matrix:
        version:
        - '6'
        - '7'
        - '8'
        - '9'
        - '10'
  cpp-gcc-2204-build:
    env:
      CC: gcc-${{ matrix.version }}
      CXX: g++-${{ matrix.version }}
    name: C++ GCC ${{ matrix.version }} (Ubuntu 22.04)
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.sha }}
    - continue-on-error: true
      name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle') }}
        path: ~/.gradle/caches
        restore-keys: '${{ runner.os }}-gradle-caches-

          '
    - continue-on-error: true
      name: Cache Gradle wrappers
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties')
          }}
        path: ~/.gradle/wrapper
    - continue-on-error: true
      name: Setup java 8 to run the Gradle script
      uses: actions/setup-java@v4
      with:
        distribution: zulu
        java-version: 8
    - continue-on-error: true
      name: Setup BUILD_JAVA_HOME & BUILD_JAVA_VERSION
      run: 'java -Xinternalversion

        echo "BUILD_JAVA_HOME=${JAVA_HOME}" >> $GITHUB_ENV

        echo "BUILD_JAVA_VERSION=8" >> $GITHUB_ENV

        '
    - continue-on-error: true
      name: Install compiler
      run: 'echo ''Acquire::Retries "${INSTALL_COMPILER_RETRIES}";'' | sudo tee -a
        /etc/apt/apt.conf.d/99retries

        sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test

        sudo apt-get update

        sudo apt-get install -y g++-${{ matrix.version }} libbsd-dev uuid-dev

        '
    - continue-on-error: true
      name: Setup small temp file system
      run: 'sudo mkdir -p /mnt/tmp_aeron_dir

        sudo mount -t tmpfs -o size=20M,mode=777 tmpfs /mnt/tmp_aeron_dir

        '
    - continue-on-error: true
      name: Build
      run: cppbuild/cppbuild --c-warnings-as-errors --cxx-warnings-as-errors
    - continue-on-error: true
      if: always()
      name: Remove small temp file system
      run: 'sudo umount /mnt/tmp_aeron_dir

        sudo rm -rf /mnt/tmp_aeron_dir

        '
    - continue-on-error: true
      id: copy_test_logs
      if: failure()
      name: Copy test logs
      run: 'echo "file=build/distributions/test_logs.tbz2" >> $GITHUB_OUTPUT

        ./gradlew tarTestLogs

        '
    - continue-on-error: true
      if: always() && steps.copy_test_logs.outputs.file == 'build/distributions/test_logs.tbz2'
      name: Upload crash logs
      uses: actions/upload-artifact@v4
      with:
        name: crash-logs-gcc-2204-${{ matrix.version }}
        path: ${{ steps.copy_test_logs.outputs.file }}
    strategy:
      fail-fast: false
      matrix:
        version:
        - '11'
        - '12'
        - '13'
  cpp-gcc-rocky-build:
    name: C++ Rocky 8
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.sha }}
    - continue-on-error: true
      name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle') }}
        path: ~/.gradle/caches
        restore-keys: '${{ runner.os }}-gradle-caches-

          '
    - continue-on-error: true
      name: Cache Gradle wrappers
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties')
          }}
        path: ~/.gradle/wrapper
    - continue-on-error: true
      name: Build
      run: GCC_VERSION=${{ matrix.version }} cppbuild/rocky-docker-build
    - continue-on-error: true
      id: copy_test_logs
      if: failure()
      name: Copy test logs
      run: 'echo "file=build/distributions/test_logs.tbz2" >> $GITHUB_OUTPUT

        ./gradlew tarTestLogs

        '
    - continue-on-error: true
      if: always() && steps.copy_test_logs.outputs.file == 'build/distributions/test_logs.tbz2'
      name: Upload crash logs
      uses: actions/upload-artifact@v4
      with:
        name: crash-logs-gcc-rhel-${{ matrix.version }}
        path: ${{ steps.copy_test_logs.outputs.file }}
    strategy:
      fail-fast: false
      matrix:
        version:
        - '10'
  cpp-msvc-build:
    env:
      CC: cl
      CXX: cl
    name: C++ MSVC (Windows)
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.sha }}
    - continue-on-error: true
      name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle') }}
        path: ~/.gradle/caches
        restore-keys: '${{ runner.os }}-gradle-caches-

          '
    - continue-on-error: true
      name: Cache Gradle wrappers
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties')
          }}
        path: ~/.gradle/wrapper
    - continue-on-error: true
      name: Setup java 8 to run the Gradle script
      uses: actions/setup-java@v4
      with:
        distribution: zulu
        java-version: 8
    - continue-on-error: true
      name: Setup BUILD_JAVA_HOME & BUILD_JAVA_VERSION
      run: 'java -Xinternalversion

        echo "BUILD_JAVA_HOME=$env:JAVA_HOME" | Out-File $env:GITHUB_ENV -Encoding
        utf8 -Append

        echo "BUILD_JAVA_VERSION=8" | Out-File $env:GITHUB_ENV -Encoding utf8 -Append

        '
    - continue-on-error: true
      name: Setup small temp file system
      run: '$current_size = (Get-PartitionSupportedSize -DiskNumber 1 -PartitionNumber
        1)

        $new_size = ($current_size.SizeMax - 100 * 1024 * 1024)

        Resize-Partition -DiskNumber 1 -PartitionNumber 1 -Size ($new_size)

        New-Partition -DiskNumber 1 -Size 30MB -DriveLetter T | Format-Volume -FileSystem
        NTFS -Confirm:$false

        mkdir T:/tmp_aeron_dir

        '
    - continue-on-error: true
      name: Build
      run: cppbuild/cppbuild.ps1
    - continue-on-error: true
      name: Remove small temp file system
      run: Remove-Partition -DriveLetter T -Confirm:$false
    - continue-on-error: true
      id: copy_test_logs
      if: failure()
      name: Copy test logs
      run: 'echo "file=build/distributions/test_logs.tbz2" >> $GITHUB_OUTPUT

        ./gradlew tarTestLogs

        '
    - continue-on-error: true
      if: always() && steps.copy_test_logs.outputs.file == 'build/distributions/test_logs.tbz2'
      name: Upload crash logs
      uses: actions/upload-artifact@v4
      with:
        name: crash-logs-msvc-latest
        path: ${{ steps.copy_test_logs.outputs.file }}
  cpp-xcode-build:
    env:
      CC: clang
      CXX: clang++
    name: C++ Xcode (macOS)
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.sha }}
    - continue-on-error: true
      name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle') }}
        path: ~/.gradle/caches
        restore-keys: '${{ runner.os }}-gradle-caches-

          '
    - continue-on-error: true
      name: Cache Gradle wrappers
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties')
          }}
        path: ~/.gradle/wrapper
    - continue-on-error: true
      name: Setup java 8 to run the Gradle script
      uses: actions/setup-java@v4
      with:
        distribution: zulu
        java-version: 8
    - continue-on-error: true
      name: Setup BUILD_JAVA_HOME & BUILD_JAVA_VERSION
      run: 'java -Xinternalversion

        echo "BUILD_JAVA_HOME=${JAVA_HOME}" >> $GITHUB_ENV

        echo "BUILD_JAVA_VERSION=8" >> $GITHUB_ENV

        '
    - continue-on-error: true
      name: Setup small temp file system and localhost name
      run: 'sudo sed -i bak "s/localhost/localhost $(hostname)/" /etc/hosts

        dscacheutil -flushcache

        sudo diskutil eraseDisk APFS tmp_aeron_dir $(hdiutil attach -nomount ram://$((2
        * 1024 * 20)))

        '
    - continue-on-error: true
      name: Build
      run: cppbuild/cppbuild --c-warnings-as-errors --cxx-warnings-as-errors
    - continue-on-error: true
      name: Remove small temp file system
      run: sudo diskutil eject tmp_aeron_dir
    - continue-on-error: true
      id: copy_test_logs
      if: failure()
      name: Copy test logs
      run: 'echo "file=build/distributions/test_logs.tbz2" >> $GITHUB_OUTPUT

        ./gradlew tarTestLogs

        '
    - continue-on-error: true
      if: always() && steps.copy_test_logs.outputs.file == 'build/distributions/test_logs.tbz2'
      name: Upload crash logs
      uses: actions/upload-artifact@v4
      with:
        name: crash-logs-xcode-latest
        path: ${{ steps.copy_test_logs.outputs.file }}
  java-build:
    name: Java ${{ matrix.java }} (${{ matrix.os }})
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.sha }}
    - continue-on-error: true
      name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle') }}
        path: ~/.gradle/caches
        restore-keys: '${{ runner.os }}-gradle-caches-

          '
    - continue-on-error: true
      name: Cache Gradle wrappers
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties')
          }}
        path: ~/.gradle/wrapper
    - continue-on-error: true
      name: Setup java
      uses: actions/setup-java@v4
      with:
        distribution: zulu
        java-version: ${{ matrix.java }}
    - continue-on-error: true
      if: runner.os == 'Linux' || runner.os == 'macOS'
      name: Setup BUILD_JAVA_HOME & BUILD_JAVA_VERSION (Linux/MacOS)
      run: 'java -Xinternalversion

        echo "BUILD_JAVA_HOME=${JAVA_HOME}" >> $GITHUB_ENV

        echo "BUILD_JAVA_VERSION=${{ matrix.java }}" >> $GITHUB_ENV

        '
    - continue-on-error: true
      if: runner.os == 'Windows'
      name: Setup BUILD_JAVA_HOME & BUILD_JAVA_VERSION (Windows)
      run: 'java -Xinternalversion

        echo "BUILD_JAVA_HOME=$env:JAVA_HOME" | Out-File $env:GITHUB_ENV -Encoding
        utf8 -Append

        echo "BUILD_JAVA_VERSION=${{ matrix.java }}" | Out-File $env:GITHUB_ENV -Encoding
        utf8 -Append

        '
    - continue-on-error: true
      name: Setup java 8 to run the Gradle script
      uses: actions/setup-java@v4
      with:
        distribution: zulu
        java-version: 8
    - continue-on-error: true
      if: runner.os == 'Linux'
      name: Setup small temp file system (Linux)
      run: 'sudo mkdir -p /mnt/tmp_aeron_dir

        sudo mount -t tmpfs -o size=20M,mode=777 tmpfs /mnt/tmp_aeron_dir

        '
    - continue-on-error: true
      if: runner.os == 'macOS'
      name: Setup small temp file system and localhost name (MacOS)
      run: 'sudo sed -i bak "s/localhost/localhost $(hostname)/" /etc/hosts

        dscacheutil -flushcache

        sudo diskutil eraseDisk APFS tmp_aeron_dir $(hdiutil attach -nomount ram://$((2
        * 1024 * 20)))

        '
    - continue-on-error: true
      if: runner.os == 'Windows'
      name: Setup small temp file system (Windows)
      run: '$current_size = (Get-PartitionSupportedSize -DiskNumber 1 -PartitionNumber
        1)

        $new_size = ($current_size.SizeMax - 100 * 1024 * 1024)

        Resize-Partition -DiskNumber 1 -PartitionNumber 1 -Size ($new_size)

        New-Partition -DiskNumber 1 -Size 30MB -DriveLetter T | Format-Volume -FileSystem
        NTFS -Confirm:$false

        mkdir T:/tmp_aeron_dir

        '
    - continue-on-error: true
      name: Build with Gradle
      run: ./gradlew -x javadoc --console=plain
    - continue-on-error: true
      if: always() && runner.os == 'Linux'
      name: Remove small temp file system (Linux)
      run: 'sudo umount /mnt/tmp_aeron_dir

        sudo rm -rf /mnt/tmp_aeron_dir

        '
    - continue-on-error: true
      if: always() && runner.os == 'macOS'
      name: Remove small temp file system (MacOS)
      run: sudo diskutil eject tmp_aeron_dir
    - continue-on-error: true
      if: always() && runner.os == 'Windows'
      name: Remove small temp file system (Windows)
      run: Remove-Partition -DriveLetter T -Confirm:$false
    - continue-on-error: true
      id: copy_test_logs
      if: failure()
      name: Copy test logs
      run: 'echo "file=build/distributions/test_logs.tbz2" >> $GITHUB_OUTPUT

        ./gradlew tarTestLogs

        '
    - continue-on-error: true
      if: always() && steps.copy_test_logs.outputs.file == 'build/distributions/test_logs.tbz2'
      name: Upload crash logs
      uses: actions/upload-artifact@v4
      with:
        name: crash-logs-${{ matrix.os }}-java-${{ matrix.java }}
        path: ${{ steps.copy_test_logs.outputs.file }}
    strategy:
      fail-fast: false
      matrix:
        java:
        - '8'
        - '17'
        - '21'
        os:
        - ubuntu-22.04
        - windows-latest
        - macos-14
  java-topology-build:
    name: Java Topology Tests (JDK ${{ matrix.java }}, ${{ matrix.os }})
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.sha }}
    - continue-on-error: true
      name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle') }}
        path: ~/.gradle/caches
        restore-keys: '${{ runner.os }}-gradle-caches-

          '
    - continue-on-error: true
      name: Cache Gradle wrappers
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties')
          }}
        path: ~/.gradle/wrapper
    - continue-on-error: true
      name: Setup java
      uses: actions/setup-java@v4
      with:
        distribution: zulu
        java-version: ${{ matrix.java }}
    - continue-on-error: true
      name: Setup BUILD_JAVA_HOME & BUILD_JAVA_VERSION
      run: 'java -Xinternalversion

        echo "BUILD_JAVA_HOME=${JAVA_HOME}" >> $GITHUB_ENV

        echo "BUILD_JAVA_VERSION=${{ matrix.java }}" >> $GITHUB_ENV

        '
    - continue-on-error: true
      name: Setup virtual network interfaces
      run: ./aeron-samples/scripts/cluster/setup-namespaces
    - continue-on-error: true
      name: Build aeron with Gradle
      run: ./gradlew clean assemble -x javadoc
    - continue-on-error: true
      name: Run execution agents
      run: ./agent-ns
      working-directory: ./aeron-samples/scripts/cluster
    - continue-on-error: true
      name: Get network information
      run: 'sudo sysctl -w net.ipv4.ip_forward=1

        sudo iptables -F FORWARD

        sudo iptables -P FORWARD ACCEPT

        '
    - continue-on-error: true
      name: Run topology tests with Gradle
      run: ./gradlew topologyTest
    - continue-on-error: true
      id: copy_test_logs
      if: failure()
      name: Copy test logs
      run: 'echo "file=build/distributions/test_logs.tbz2" >> $GITHUB_OUTPUT

        ./gradlew tarTestLogs

        '
    - continue-on-error: true
      if: always() && steps.copy_test_logs.outputs.file == 'build/distributions/test_logs.tbz2'
      name: Upload crash logs
      uses: actions/upload-artifact@v4
      with:
        name: crash-logs-topology-${{ matrix.os }}-java-${{ matrix.java }}
        path: ${{ steps.copy_test_logs.outputs.file }}
    strategy:
      fail-fast: false
      matrix:
        java:
        - '8'
        os:
        - ubuntu-22.04
name: Continuous Integration
on:
  repository_dispatch:
    types: trigger-ga___ci.yml
permissions:
  contents: read
